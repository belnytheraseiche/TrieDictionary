### YamlMime:ManagedReference
items:
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  commentId: T:BelNytheraSeiche.TrieDictionary.BasicRecordStore
  id: BasicRecordStore
  parent: BelNytheraSeiche.TrieDictionary
  children:
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add(System.Int32)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains(System.Int32)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.Byte[])
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.IO.Stream)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.String)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(System.Int32)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(System.Int32,System.Boolean@)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove(System.Int32)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,System.IO.Stream,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,System.String,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  - BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess(System.Int32,BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess@)
  langs:
  - csharp
  - vb
  name: BasicRecordStore
  nameWithType: BasicRecordStore
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  type: Class
  source:
    id: BasicRecordStore
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 36
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: An abstract base class for key-value record stores.
  remarks: >-
    This class defines a common interface for record manipulation (add, remove, enumerate, etc.)

    and provides a generic, reflection-based serialization mechanism that dispatches to the static methods of the concrete derived class.
  example: []
  syntax:
    content: public abstract class BasicRecordStore
    content.vb: Public MustInherit Class BasicRecordStore
  inheritance:
  - System.Object
  derivedClasses:
  - BelNytheraSeiche.TrieDictionary.BinaryTreeRecordStore
  - BelNytheraSeiche.TrieDictionary.HashMapRecordStore
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  id: Serialize``1(``0,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Serialize<T>(T, SerializationOptions?)
  nameWithType: BasicRecordStore.Serialize<T>(T, BasicRecordStore.SerializationOptions?)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize<T>(T, BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions?)
  type: Method
  source:
    id: Serialize
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 47
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Serializes the specified store instance into a byte array.
  remarks: This static method uses reflection to invoke the static `Serialize(T, Stream)` method on the actual type of <code class="paramref">obj</code>.
  example: []
  syntax:
    content: 'public static byte[] Serialize<T>(T obj, BasicRecordStore.SerializationOptions? options = null) where T : BasicRecordStore'
    parameters:
    - id: obj
      type: '{T}'
      description: The record store instance to serialize.
    - id: options
      type: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
      description: Options to control the serialization process. If null, the settings from <xref href="BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    typeParameters:
    - id: T
      description: The concrete type of the record store, which must have a public static `Serialize(T, Stream)` method.
    return:
      type: System.Byte[]
      description: A byte array containing the serialized data.
    content.vb: Public Shared Function Serialize(Of T As BasicRecordStore)(obj As T, options As BasicRecordStore.SerializationOptions = Nothing) As Byte()
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">obj</code> is null.
  nameWithType.vb: BasicRecordStore.Serialize(Of T)(T, BasicRecordStore.SerializationOptions)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize(Of T)(T, BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  name.vb: Serialize(Of T)(T, SerializationOptions)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,System.String,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,System.String,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  id: Serialize``1(``0,System.String,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Serialize<T>(T, string, SerializationOptions?)
  nameWithType: BasicRecordStore.Serialize<T>(T, string, BasicRecordStore.SerializationOptions?)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize<T>(T, string, BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions?)
  type: Method
  source:
    id: Serialize
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 75
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Serializes the specified store instance to a file.
  remarks: This static method uses reflection to invoke the static `Serialize(T, Stream)` method on the actual type of <code class="paramref">obj</code>.
  example: []
  syntax:
    content: 'public static void Serialize<T>(T obj, string file, BasicRecordStore.SerializationOptions? options = null) where T : BasicRecordStore'
    parameters:
    - id: obj
      type: '{T}'
      description: The record store instance to serialize.
    - id: file
      type: System.String
      description: The path of the file to create.
    - id: options
      type: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
      description: Options to control the serialization process. If null, the settings from <xref href="BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    typeParameters:
    - id: T
      description: The concrete type of the record store, which must have a public static `Serialize(T, Stream)` method.
    content.vb: Public Shared Sub Serialize(Of T As BasicRecordStore)(obj As T, file As String, options As BasicRecordStore.SerializationOptions = Nothing)
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">obj</code> or <code class="paramref">file</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">file</code> is empty or whitespace.
  nameWithType.vb: BasicRecordStore.Serialize(Of T)(T, String, BasicRecordStore.SerializationOptions)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize(Of T)(T, String, BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  name.vb: Serialize(Of T)(T, String, SerializationOptions)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,System.IO.Stream,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize``1(``0,System.IO.Stream,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  id: Serialize``1(``0,System.IO.Stream,BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Serialize<T>(T, Stream, SerializationOptions?)
  nameWithType: BasicRecordStore.Serialize<T>(T, Stream, BasicRecordStore.SerializationOptions?)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize<T>(T, System.IO.Stream, BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions?)
  type: Method
  source:
    id: Serialize
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 103
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Serializes the specified store instance into a stream using reflection.
  example: []
  syntax:
    content: 'public static void Serialize<T>(T obj, Stream stream, BasicRecordStore.SerializationOptions? options = null) where T : BasicRecordStore'
    parameters:
    - id: obj
      type: '{T}'
      description: The record store instance to serialize.
    - id: stream
      type: System.IO.Stream
      description: The stream to write the serialized data to.
    - id: options
      type: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
      description: Options to control the serialization process. If null, the settings from <xref href="BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    typeParameters:
    - id: T
      description: The concrete type of the record store, which must have a public static `Serialize(T, Stream)` method.
    content.vb: Public Shared Sub Serialize(Of T As BasicRecordStore)(obj As T, stream As Stream, options As BasicRecordStore.SerializationOptions = Nothing)
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">obj</code> or <code class="paramref">stream</code> is null.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The type <code class="typeparamref">T</code> does not have a public static `Serialize(T, Stream)` method.
  nameWithType.vb: BasicRecordStore.Serialize(Of T)(T, Stream, BasicRecordStore.SerializationOptions)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize(Of T)(T, System.IO.Stream, BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions)
  name.vb: Serialize(Of T)(T, Stream, SerializationOptions)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.Byte[])
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.Byte[])
  id: Deserialize``1(System.Byte[])
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Deserialize<T>(byte[])
  nameWithType: BasicRecordStore.Deserialize<T>(byte[])
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize<T>(byte[])
  type: Method
  source:
    id: Deserialize
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 132
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Deserializes a store from a byte array.
  remarks: This static method uses reflection to invoke the static `Deserialize(Stream)` method on the specified type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static T Deserialize<T>(byte[] data) where T : BasicRecordStore'
    parameters:
    - id: data
      type: System.Byte[]
      description: The byte array containing the serialized data.
    typeParameters:
    - id: T
      description: The concrete type of the record store to deserialize, which must have a public static `Deserialize(Stream)` method.
    return:
      type: '{T}'
      description: A new instance of <code class="typeparamref">T</code>.
    content.vb: Public Shared Function Deserialize(Of T As BasicRecordStore)(data As Byte()) As T
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">data</code> is null.
  nameWithType.vb: BasicRecordStore.Deserialize(Of T)(Byte())
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize(Of T)(Byte())
  name.vb: Deserialize(Of T)(Byte())
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.String)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Deserialize<T>(string)
  nameWithType: BasicRecordStore.Deserialize<T>(string)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize<T>(string)
  type: Method
  source:
    id: Deserialize
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 158
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Deserializes a store from a file.
  remarks: This static method uses reflection to invoke the static `Deserialize(Stream)` method on the specified type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static T Deserialize<T>(string file) where T : BasicRecordStore'
    parameters:
    - id: file
      type: System.String
      description: The path of the file to read from.
    typeParameters:
    - id: T
      description: The concrete type of the record store to deserialize, which must have a public static `Deserialize(Stream)` method.
    return:
      type: '{T}'
      description: A new instance of <code class="typeparamref">T</code>.
    content.vb: Public Shared Function Deserialize(Of T As BasicRecordStore)(file As String) As T
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">file</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">file</code> is empty or whitespace.
  nameWithType.vb: BasicRecordStore.Deserialize(Of T)(String)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize(Of T)(String)
  name.vb: Deserialize(Of T)(String)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.IO.Stream)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize``1(System.IO.Stream)
  id: Deserialize``1(System.IO.Stream)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Deserialize<T>(Stream)
  nameWithType: BasicRecordStore.Deserialize<T>(Stream)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize<T>(System.IO.Stream)
  type: Method
  source:
    id: Deserialize
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 185
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Deserializes a store from a stream using reflection.
  example: []
  syntax:
    content: 'public static T Deserialize<T>(Stream stream) where T : BasicRecordStore'
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to read the serialized data from.
    typeParameters:
    - id: T
      description: The concrete type of the record store to deserialize, which must have a public static `Deserialize(Stream)` method.
    return:
      type: '{T}'
      description: A new instance of <code class="typeparamref">T</code>.
    content.vb: Public Shared Function Deserialize(Of T As BasicRecordStore)(stream As Stream) As T
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">stream</code> is null.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The type <code class="typeparamref">T</code> does not have a public static `Deserialize(Stream)` method.
  nameWithType.vb: BasicRecordStore.Deserialize(Of T)(Stream)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize(Of T)(System.IO.Stream)
  name.vb: Deserialize(Of T)(Stream)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear
  id: Clear
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BasicRecordStore.Clear()
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear()
  type: Method
  source:
    id: Clear
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 206
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: When overridden in a derived class, removes all records from the store.
  example: []
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear()
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear*
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains(System.Int32)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains(System.Int32)
  id: Contains(System.Int32)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Contains(int)
  nameWithType: BasicRecordStore.Contains(int)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains(int)
  type: Method
  source:
    id: Contains
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 214
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: When overridden in a derived class, determines whether a record with the specified identifier exists.
  example: []
  syntax:
    content: public virtual bool Contains(int identifier)
    parameters:
    - id: identifier
      type: System.Int32
      description: The identifier to locate.
    return:
      type: System.Boolean
      description: true if a record with the specified identifier is found; otherwise, false.
    content.vb: Public Overridable Function Contains(identifier As Integer) As Boolean
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains*
  nameWithType.vb: BasicRecordStore.Contains(Integer)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains(Integer)
  name.vb: Contains(Integer)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove(System.Int32)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove(System.Int32)
  id: Remove(System.Int32)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Remove(int)
  nameWithType: BasicRecordStore.Remove(int)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove(int)
  type: Method
  source:
    id: Remove
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 221
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: When overridden in a derived class, removes a record with the specified identifier.
  example: []
  syntax:
    content: public virtual void Remove(int identifier)
    parameters:
    - id: identifier
      type: System.Int32
      description: The identifier of the record to remove.
    content.vb: Public Overridable Sub Remove(identifier As Integer)
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove*
  nameWithType.vb: BasicRecordStore.Remove(Integer)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove(Integer)
  name.vb: Remove(Integer)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add(System.Int32)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add(System.Int32)
  id: Add(System.Int32)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Add(int)
  nameWithType: BasicRecordStore.Add(int)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add(int)
  type: Method
  source:
    id: Add
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 229
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Adds a record with the specified identifier, or returns false if it already exists.
  example: []
  syntax:
    content: public virtual bool Add(int identifier)
    parameters:
    - id: identifier
      type: System.Int32
      description: The identifier of the record to add.
    return:
      type: System.Boolean
      description: true if a new record was added; false if a record with that identifier already existed.
    content.vb: Public Overridable Function Add(identifier As Integer) As Boolean
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add*
  nameWithType.vb: BasicRecordStore.Add(Integer)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add(Integer)
  name.vb: Add(Integer)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(System.Int32)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(System.Int32)
  id: GetRecordAccess(System.Int32)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: GetRecordAccess(int)
  nameWithType: BasicRecordStore.GetRecordAccess(int)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(int)
  type: Method
  source:
    id: GetRecordAccess
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 240
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: Gets the accessor for a record with the specified identifier. If the record does not exist, it is created.
  example: []
  syntax:
    content: public virtual BasicRecordStore.RecordAccess GetRecordAccess(int identifier)
    parameters:
    - id: identifier
      type: System.Int32
      description: The identifier of the record to get or create.
    return:
      type: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
      description: A <xref href="BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess" data-throw-if-not-resolved="false"></xref> for the found or newly created record.
    content.vb: Public Overridable Function GetRecordAccess(identifier As Integer) As BasicRecordStore.RecordAccess
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess*
  nameWithType.vb: BasicRecordStore.GetRecordAccess(Integer)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(Integer)
  name.vb: GetRecordAccess(Integer)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(System.Int32,System.Boolean@)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(System.Int32,System.Boolean@)
  id: GetRecordAccess(System.Int32,System.Boolean@)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: GetRecordAccess(int, out bool)
  nameWithType: BasicRecordStore.GetRecordAccess(int, out bool)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(int, out bool)
  type: Method
  source:
    id: GetRecordAccess
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 249
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: When overridden in a derived class, gets the accessor for a record with the specified identifier, indicating if it was newly created.
  example: []
  syntax:
    content: public virtual BasicRecordStore.RecordAccess GetRecordAccess(int identifier, out bool createNew)
    parameters:
    - id: identifier
      type: System.Int32
      description: The identifier of the record to get or create.
    - id: createNew
      type: System.Boolean
      description: When this method returns, contains true if a new record was created; otherwise, false.
    return:
      type: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
      description: A <xref href="BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess" data-throw-if-not-resolved="false"></xref> for the found or newly created record.
    content.vb: Public Overridable Function GetRecordAccess(identifier As Integer, createNew As Boolean) As BasicRecordStore.RecordAccess
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess*
  nameWithType.vb: BasicRecordStore.GetRecordAccess(Integer, Boolean)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess(Integer, Boolean)
  name.vb: GetRecordAccess(Integer, Boolean)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess(System.Int32,BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess@)
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess(System.Int32,BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess@)
  id: TryGetRecordAccess(System.Int32,BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess@)
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: TryGetRecordAccess(int, out RecordAccess?)
  nameWithType: BasicRecordStore.TryGetRecordAccess(int, out BasicRecordStore.RecordAccess?)
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess(int, out BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess?)
  type: Method
  source:
    id: TryGetRecordAccess
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 258
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: When overridden in a derived class, tries to get the accessor for a record with the specified identifier.
  example: []
  syntax:
    content: public virtual bool TryGetRecordAccess(int identifier, out BasicRecordStore.RecordAccess? access)
    parameters:
    - id: identifier
      type: System.Int32
      description: The identifier to locate.
    - id: access
      type: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
      description: When this method returns, contains the <xref href="BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess" data-throw-if-not-resolved="false"></xref> object if the identifier was found; otherwise, null.
    return:
      type: System.Boolean
      description: true if a record with the specified identifier was found; otherwise, false.
    content.vb: Public Overridable Function TryGetRecordAccess(identifier As Integer, access As BasicRecordStore.RecordAccess) As Boolean
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess*
  nameWithType.vb: BasicRecordStore.TryGetRecordAccess(Integer, BasicRecordStore.RecordAccess)
  fullName.vb: BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess(Integer, BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess)
  name.vb: TryGetRecordAccess(Integer, RecordAccess)
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate
  commentId: M:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate
  id: Enumerate
  parent: BelNytheraSeiche.TrieDictionary.BasicRecordStore
  langs:
  - csharp
  - vb
  name: Enumerate()
  nameWithType: BasicRecordStore.Enumerate()
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate()
  type: Method
  source:
    id: Enumerate
    path: C:\Users\nanto\dev\TrieDictionary\src\BasicRecordStore.cs
    startLine: 265
  assemblies:
  - BelNytheraSeiche.TrieDictionary
  namespace: BelNytheraSeiche.TrieDictionary
  summary: When overridden in a derived class, returns an enumerator that iterates through all records in the store.
  example: []
  syntax:
    content: public virtual IEnumerable<(int, BasicRecordStore.RecordAccess)> Enumerate()
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess}}
      description: An <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of tuples, each containing an identifier and its corresponding <xref href="BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overridable Function Enumerate() As IEnumerable(Of (Integer, BasicRecordStore.RecordAccess))
  overload: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate*
references:
- uid: BelNytheraSeiche.TrieDictionary
  commentId: N:BelNytheraSeiche.TrieDictionary
  href: BelNytheraSeiche.html
  name: BelNytheraSeiche.TrieDictionary
  nameWithType: BelNytheraSeiche.TrieDictionary
  fullName: BelNytheraSeiche.TrieDictionary
  spec.csharp:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary
    name: TrieDictionary
    href: BelNytheraSeiche.TrieDictionary.html
  spec.vb:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary
    name: TrieDictionary
    href: BelNytheraSeiche.TrieDictionary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.Default
  commentId: P:BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.Default
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_SerializationOptions_Default
  name: Default
  nameWithType: BasicRecordStore.SerializationOptions.Default
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.Default
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_Serialize__1___0_BelNytheraSeiche_TrieDictionary_BasicRecordStore_SerializationOptions_
  name: Serialize
  nameWithType: BasicRecordStore.Serialize
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Serialize
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
  commentId: T:BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
  parent: BelNytheraSeiche.TrieDictionary
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  name: BasicRecordStore.SerializationOptions
  nameWithType: BasicRecordStore.SerializationOptions
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
  spec.csharp:
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore
    name: BasicRecordStore
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
    name: SerializationOptions
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.html
  spec.vb:
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore
    name: BasicRecordStore
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions
    name: SerializationOptions
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.SerializationOptions.html
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_Deserialize__1_System_Byte___
  name: Deserialize
  nameWithType: BasicRecordStore.Deserialize
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Deserialize
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_Clear
  name: Clear
  nameWithType: BasicRecordStore.Clear
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Clear
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_Contains_System_Int32_
  name: Contains
  nameWithType: BasicRecordStore.Contains
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Contains
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_Remove_System_Int32_
  name: Remove
  nameWithType: BasicRecordStore.Remove
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Remove
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_Add_System_Int32_
  name: Add
  nameWithType: BasicRecordStore.Add
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Add
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
  commentId: T:BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
  parent: BelNytheraSeiche.TrieDictionary
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  name: BasicRecordStore.RecordAccess
  nameWithType: BasicRecordStore.RecordAccess
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
  spec.csharp:
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore
    name: BasicRecordStore
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
    name: RecordAccess
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess.html
  spec.vb:
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore
    name: BasicRecordStore
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
    name: RecordAccess
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess.html
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_GetRecordAccess_System_Int32_
  name: GetRecordAccess
  nameWithType: BasicRecordStore.GetRecordAccess
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.GetRecordAccess
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_TryGetRecordAccess_System_Int32_BelNytheraSeiche_TrieDictionary_BasicRecordStore_RecordAccess__
  name: TryGetRecordAccess
  nameWithType: BasicRecordStore.TryGetRecordAccess
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.TryGetRecordAccess
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate*
  commentId: Overload:BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate
  href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html#BelNytheraSeiche_TrieDictionary_BasicRecordStore_Enumerate
  name: Enumerate
  nameWithType: BasicRecordStore.Enumerate
  fullName: BelNytheraSeiche.TrieDictionary.BasicRecordStore.Enumerate
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(int, BasicRecordStore.RecordAccess)>
  nameWithType: IEnumerable<(int, BasicRecordStore.RecordAccess)>
  fullName: System.Collections.Generic.IEnumerable<(int, BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess)>
  nameWithType.vb: IEnumerable(Of (Integer, BasicRecordStore.RecordAccess))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Integer, BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess))
  name.vb: IEnumerable(Of (Integer, BasicRecordStore.RecordAccess))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore
    name: BasicRecordStore
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
    name: RecordAccess
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess.html
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore
    name: BasicRecordStore
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.html
  - name: .
  - uid: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess
    name: RecordAccess
    href: BelNytheraSeiche.TrieDictionary.BasicRecordStore.RecordAccess.html
  - name: )
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
